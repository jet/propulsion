name: Run tests

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '*'

jobs:
  build-test-deploy:
    name: Build and test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          # will assign a random free host port
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      zookeeper:
        image: zookeeper:3.4
        ports:
          - 2181:2181
      kafka:
        image: ches/kafka
        env:
          KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
          ZOOKEEPER_IP: 127.0.0.1
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
          KAFKA_NUM_PARTITIONS: 4
        ports:
          - 9092:9092
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Install message-db
        env:
          MESSAGE_DB_VERSION: 1.3.0
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: postgres
          PGPORT: '5432'
        run: |
          mkdir -p /tmp/eventide
          curl -L https://github.com/message-db/message-db/archive/refs/tags/v$MESSAGE_DB_VERSION.tar.gz -o /tmp/eventide/message-db.tgz
          tar -xf /tmp/eventide/message-db.tgz --directory /tmp/eventide
          (cd /tmp/eventide/message-db-${MESSAGE_DB_VERSION}/database && ./install.sh)

      - name: Run Tests
        env:
          TEST_KAFKA_BROKER: localhost:9092
          MSG_DB_CONNECTION_STRING: "Host=localhost; Database=message_store; Port=5432; Username=message_store"
          CHECKPOINT_CONNECTION_STRING: "Host=localhost; Database=message_store; Port=5432; Username=postgres; Password=postgres"
        run: dotnet build build.proj -v d 
