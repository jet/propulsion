name: $(Rev:r)

# Summary:
#	Linux: Tests with netcoreapp3.1 using docker Kafka instance
#		net461 on Mono is not working, no investigation why as yet, but local run validates it
#	Windows: Builds and emits nupkg as artifacts
#	MacOS: Builds only

jobs:
- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - script: dotnet pack build.proj
    displayName: dotnet pack build.proj
    env:
      BUILD_PR: $(SYSTEM.PULLREQUEST.PULLREQUESTNUMBER)
      BUILD_ID: $(BUILD.BUILDNUMBER)
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'bin/nupkg'
      artifactName: 'nupkgs'
- job: Linux
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET Core sdk'
    inputs:
      packageType: sdk
      version: 3.1.101
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - script: |
      docker network create kafka-net
      docker run -d --name zookeeper --network kafka-net --publish 2181:2181 zookeeper:3.4
      docker run -d --name kafka --network kafka-net --hostname localhost --publish 9092:9092 \
          --env KAFKA_ADVERTISED_HOST_NAME=127.0.0.1 --env ZOOKEEPER_IP=zookeeper \
          --env KAFKA_AUTO_CREATE_TOPICS_ENABLE=true --env KAFKA_NUM_PARTITIONS=4 \
          ches/kafka
      sleep 15
    displayName: Docker kafka for integration tests
  - script: dotnet build build.proj -v d
    displayName: Run Integration tests
    env:
      TEST_KAFKA_BROKER: localhost:9092
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: 'tests/**/*.trx'
    condition: succeededOrFailed()
- job: MacOS
  pool:
    vmImage: 'macOS-latest'
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET Core sdk'
    inputs:
      packageType: sdk
      version: 3.1.101
      installationPath: $(Agent.ToolsDirectory)/dotnet
  - script: dotnet pack build.proj
    displayName: dotnet pack build.proj